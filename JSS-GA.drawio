<mxfile host="app.diagrams.net" modified="2022-08-15T11:12:50.239Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.81 Safari/537.36 Edg/104.0.1293.54" etag="VTu9KvRl_SmTBcpCDH2V" version="20.2.3" type="github">
  <diagram name="Page-1" id="b5b7bab2-c9e2-2cf4-8b2a-24fd1a2a6d21">
    <mxGraphModel dx="2893" dy="1740" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="3300" pageHeight="4681" background="none" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="xL0LI_DuVyFmDKx2Fw36-1" value="Machine&#xa;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="220" width="480" height="190" as="geometry" />
        </mxCell>
        <mxCell id="xL0LI_DuVyFmDKx2Fw36-2" value="int machine_id_&#xa; int machine_free_time_&#xa; free_slots free_slots_ (free_slots is a boost class)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="xL0LI_DuVyFmDKx2Fw36-1" vertex="1">
          <mxGeometry y="26" width="480" height="54" as="geometry" />
        </mxCell>
        <mxCell id="xL0LI_DuVyFmDKx2Fw36-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="xL0LI_DuVyFmDKx2Fw36-1" vertex="1">
          <mxGeometry y="80" width="480" height="8" as="geometry" />
        </mxCell>
        <mxCell id="xL0LI_DuVyFmDKx2Fw36-4" value="Machine(int machine_id, int machine_free_time)&#xa; void OccupyTimeSlot(int start_time, int end_time)&#xa; void ScheduleOperation(Operation&amp; operation, int start_time, int end_time)&#xa; void ScheduleOperationNonMappable(Operation&amp; operation, int start_time, int end_time)&#xa; int GetSuitableTimeSlot(int operation_idx, int prev_op_end_time, int operation_duration)&#xa; static Machine&amp; GetMachineByID(int machine_id, std::map&lt;int, Machine&gt;&amp; machines)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="xL0LI_DuVyFmDKx2Fw36-1" vertex="1">
          <mxGeometry y="88" width="480" height="102" as="geometry" />
        </mxCell>
        <mxCell id="xL0LI_DuVyFmDKx2Fw36-5" value="Operations" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="410" width="440" height="220" as="geometry" />
        </mxCell>
        <mxCell id="xL0LI_DuVyFmDKx2Fw36-6" value="const int sequence_;&#xa; const int duration_;&#xa; const Process&amp; process_;&#xa; int start_time_{-1};&#xa; int end_time_{-1};&#xa; int allotted_machine_id_{-1};&#xa; int operation_id_{ -1 };" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="xL0LI_DuVyFmDKx2Fw36-5" vertex="1">
          <mxGeometry y="26" width="440" height="114" as="geometry" />
        </mxCell>
        <mxCell id="xL0LI_DuVyFmDKx2Fw36-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="xL0LI_DuVyFmDKx2Fw36-5" vertex="1">
          <mxGeometry y="140" width="440" height="8" as="geometry" />
        </mxCell>
        <mxCell id="xL0LI_DuVyFmDKx2Fw36-8" value="Operation(int process_id, int sequence, int duration, const Process&amp; process);&#xa; void SetStartTime(int start_time);&#xa; void SetEndTime(int end_time);&#xa; void SetAllottedMachine(int machine_id_);" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="xL0LI_DuVyFmDKx2Fw36-5" vertex="1">
          <mxGeometry y="148" width="440" height="72" as="geometry" />
        </mxCell>
        <mxCell id="xL0LI_DuVyFmDKx2Fw36-10" value="Bucket" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="1" vertex="1">
          <mxGeometry x="520" y="220" width="180" height="130" as="geometry" />
        </mxCell>
        <mxCell id="xL0LI_DuVyFmDKx2Fw36-11" value="int bucket_id_{-1};&#xa; map&lt;int, Job&gt; jobs_;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="xL0LI_DuVyFmDKx2Fw36-10" vertex="1">
          <mxGeometry y="26" width="180" height="44" as="geometry" />
        </mxCell>
        <mxCell id="xL0LI_DuVyFmDKx2Fw36-12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="xL0LI_DuVyFmDKx2Fw36-10" vertex="1">
          <mxGeometry y="70" width="180" height="8" as="geometry" />
        </mxCell>
        <mxCell id="xL0LI_DuVyFmDKx2Fw36-13" value="Bucket() = default&#xa; explicit Bucket(int bucket_id)&#xa; void AddJob(Job&amp; job)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="xL0LI_DuVyFmDKx2Fw36-10" vertex="1">
          <mxGeometry y="78" width="180" height="52" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-1" value="Using" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" vertex="1" parent="1">
          <mxGeometry x="390" width="340" height="220" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-2" value="Random = effolkronium::random_static;&#xa;chromosome_t = std::vector&lt;int&gt;;&#xa;population_t = std::vector&lt;pair&lt;chromosome_t, int&gt;&gt;;&#xa;jobs_t = std::map&lt;int, Job&gt;;&#xa;machines_t = std::map&lt;int, Machine&gt;;&#xa;Random = effolkronium::random_static;&#xa;time_slot = interval&lt;int&gt;::type;&#xa;free_slots = interval_set&lt;int&gt;;&#xa;json = nlohmann::json;&#xa;processes_t = std::map&lt;int, Process&gt;;&#xa;buckets_t = std::vector&lt;Bucket&gt;;&#xa;processes = std::map&lt;int, Process&gt;;&#xa;machines = std::vector&lt;int&gt;;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-1">
          <mxGeometry y="26" width="340" height="194" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-6" value="Process" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" vertex="1" parent="1">
          <mxGeometry x="520" y="350" width="400" height="190" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-7" value="using processes = std::map&lt;int, Process&gt;;&#xa;	using machines = std::vector&lt;int&gt;;&#xa;int process_id_;&#xa;	bool mappable_;&#xa;	std::vector&lt;int&gt; associated_machines_;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-6">
          <mxGeometry y="26" width="400" height="84" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-6">
          <mxGeometry y="110" width="400" height="8" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-9" value="Process(int process_id, bool mappable);&#xa;	static Process&amp; GetProcessByID(int process_id, processes &amp;processes);&#xa;	void AssociateMachineWithProcess(Machine&amp; machine);&#xa;	const machines&amp; GetAssociatedMachines() const;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-6">
          <mxGeometry y="118" width="400" height="72" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-14" value="Job" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" vertex="1" parent="1">
          <mxGeometry x="1120" y="240" width="270" height="130" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-15" value="int job_id_;&#xa;	std::vector&lt;Operation&gt; operations_;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-14">
          <mxGeometry y="26" width="270" height="34" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-16" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-14">
          <mxGeometry y="60" width="270" height="8" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-17" value="Job() = default;&#xa;	explicit Job(int job_id);&#xa;&#xa;	void AddOperation(const Operation&amp; operation);" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-14">
          <mxGeometry y="68" width="270" height="62" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-18" value="Application" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="60" width="250" height="160" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-19" value="machines_t machines_;&#xa;	processes_t processes_;&#xa;	buckets_t buckets_;&#xa;	json json_input_data_;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-18">
          <mxGeometry y="26" width="250" height="64" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-20" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-18">
          <mxGeometry y="90" width="250" height="8" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-21" value="void LoadData();&#xa;void Run();&#xa;void ParseCommandLineArgs(int argc, char* argv[]);" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-18">
          <mxGeometry y="98" width="250" height="62" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-22" value="Config" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="630" width="290" height="240" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-23" value="static Config* config_instance_;&#xa;	int number_of_gens_;&#xa;	int pop_size_;&#xa;	std::string input_file_path;&#xa;&#xa;	Config() : number_of_gens_(10000), pop_size_(0) {}" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-22">
          <mxGeometry y="26" width="290" height="94" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-24" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-22">
          <mxGeometry y="120" width="290" height="8" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-25" value="static Config* GetInstance();&#xa;	void SetNumberOfGens(int number_of_gens);&#xa;	void SetPopSize(int pop_size);&#xa;	int GetNumberOfGens() const;&#xa;	int GetPopSize() const;&#xa;	void SetInputFilePath(std::string path);&#xa;	std::string GetInputFilePath();" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-22">
          <mxGeometry y="128" width="290" height="112" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-26" value="file_processor" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" vertex="1" parent="1">
          <mxGeometry x="520" y="540" width="410" height="180" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-27" value="class Bucket;&#xa;using json = nlohmann::json;&#xa;&#xa;json LoadInputFile(const std::string&amp; input_file_path);&#xa;&#xa;string convertMakeSpanToISODateTime(int makespan);&#xa;&#xa;void CreateBryntumInputFile(Bucket&amp; buckets, machines_t&amp; machines);&#xa;&#xa;void CreateJSSOutputFile(buckets_t&amp; buckets, machines_t&amp; machines);" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-26">
          <mxGeometry y="26" width="410" height="154" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-30" value="Namespace&#xa;Genetic" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" vertex="1" parent="1">
          <mxGeometry x="1120" y="640" width="570" height="424" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-31" value="const double kCrossoverRate = 1;&#xa;	const double kMutationRate = 1;&#xa;&#xa;	struct OrderedOperation {&#xa;		int job_id;&#xa;		int operation_index;&#xa;		OrderedOperation(int job, int operation) : job_id(job), operation_index(operation) {}&#xa;	};" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-30">
          <mxGeometry y="40" width="570" height="120" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-32" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-30">
          <mxGeometry y="160" width="570" height="24" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-33" value="bool CheckProbability(double rate);&#xa;&#xa;	chromosome_t GenerateChromosome(const jobs_t&amp; jobs);&#xa;population_t GeneratePopulation(jobs_t&amp; jobs);&#xa;	chromosome_t Mutate(chromosome_t chromosome);&#xa;	chromosome_t Crossover(chromosome_t parent_1, chromosome_t parent_2);&#xa;	int ComputeMakespan(chromosome_t&amp; chromosome, jobs_t jobs, machines_t machines);&#xa;	void ComputeFitnessOfPopulation(population_t&amp; population, jobs_t&amp; jobs, machines_t&amp; machines);&#xa;chromosome_t&amp; TournamentSelection(population_t&amp; population);&#xa;	void CrossoverPopulation(population_t&amp; parent_population, population_t&amp; child_population);&#xa;	void MutatePopulation(population_t&amp; population);&#xa;	void RunGeneticAlgorithm(jobs_t&amp; jobs, machines_t&amp; machines, int number_of_gens);&#xa;	void RunGeneticAlgorithmTest(jobs_t&amp; jobs, machines_t&amp; machines, int number_of_gens);&#xa;	pair&lt;chromosome_t, int&gt; RunGA(jobs_t&amp; jobs, machines_t&amp; machines, int number_of_gens);&#xa;	void MapChromosomeToMachines(chromosome_t&amp; chromosome, jobs_t&amp; jobs, machines_t&amp; machines);&#xa;	void ScheduleBucket(Bucket&amp; bucket, machines_t&amp; machines);" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-30">
          <mxGeometry y="184" width="570" height="240" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-34" value="Namespace&#xa;Parser" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=40;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" vertex="1" parent="1">
          <mxGeometry x="1120" y="400" width="640" height="184" as="geometry" />
        </mxCell>
        <mxCell id="8Wn9Af_72iYiqqPnA7Zo-37" value="void ParseConfig(const json&amp; json_input_data);&#xa;&#xa;	void ParseMachines(const json&amp; json_input_data, machines_t&amp; machines);&#xa;&#xa;	void ParseProcesses(const json&amp; json_input_data, processes_t&amp; processes, machines_t&amp; machines);&#xa;&#xa;	void ParseBuckets(const json&amp; json_input_data, buckets_t&amp; buckets, processes_t&amp; processes);&#xa;&#xa;	void ParseData(const json&amp; json_input_data, processes_t&amp; processes, machines_t&amp; machines, buckets_t&amp; buckets);" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="8Wn9Af_72iYiqqPnA7Zo-34">
          <mxGeometry y="40" width="640" height="144" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
